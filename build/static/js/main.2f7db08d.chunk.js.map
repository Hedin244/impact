{"version":3,"sources":["components/LoginModal/styles.js","components/LogoutModal/styles.js","components/Hedaer/styles.js","components/CharacterPage/styles.js","components/LoginModal/LoginModal.js","components/LoginModal/index.js","components/LogoutModal/LogoutModal.js","components/LogoutModal/index.js","components/RegisterModal/index.js","components/RegisterModal/RegisterModal.js","context/auth-context.js","components/LoginButton/LoginButton.js","components/Hedaer/Header.js","components/Hedaer/index.js","components/CharacterPage/BasePanel.js","components/CharacterPage/HistoryPanel.js","components/CharacterPage/EventsPanel.js","components/CharacterPage/InventionsPanel.js","components/CharacterPage/CharacterPanel.js","components/CharacterPage/CharacterPage.js","components/CharacterPage/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","menuButton","marginRight","spacing","title","flexGrow","root","margin","display","height","boxSizing","overflow","tabMenu","minWidth","tabContent","minHeight","maxHeight","card","SelectedCard","backgroundColor","palette","action","selected","LoginModal","emailEl","React","createRef","passwordEl","handleSubmit","event","props","handleClose","handleLogin","preventDefault","email","current","value","password","trim","length","fetch","method","headers","body","JSON","stringify","query","then","res","status","Error","json","resData","data","login","token","userId","tokenExpiration","catch","err","console","log","renderInput","field","other","TextField","id","name","label","upperFirst","this","open","Input","Dialog","onClose","onSubmit","DialogTitle","DialogContent","inputRef","type","DialogActions","Button","onClick","color","PureComponent","withStyles","styles","LogoutModal","handleLogout","DialogContentText","RegisterModal","state","loading","emailError","handleRegister","setState","errors","message","createUser","required","helperText","autoFocus","error","Boolean","createContext","logout","LoginButton","context","registerModalOpen","modalOpen","toggleRegisterModal","toggleModal","key","contextType","AuthContext","Header","classes","position","edge","className","aria-label","align","variant","Item","children","ListItem","BasePanel","renderChapter","list","Card","elevation","CardContent","List","Chapter","HistoryPanel","EventsPanel","InventionsPanel","renderCharacter","cardClass","classNames","Character","CharacterPanel","TabPanel","index","component","role","hidden","Box","p","a11yProps","CharacterPage","tab","setTab","Tabs","orientation","onChange","Tab","App","style","top","left","right","bottom","flexDirection","Provider","exact","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2f7db08d.chunk.js","sourcesContent":["module.exports = theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }, \n});","module.exports = theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }, \n});","module.exports = theme => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }, \n});","module.exports = theme => ({\n    root: {\n        margin: theme.spacing(1.5),\n        display: 'flex',\n        height: `calc(100% - ${ theme.spacing(3) }px)`,\n        boxSizing: 'border-box',\n        overflow: 'auto',\n    },\n    tabMenu: {\n        margin: theme.spacing(1.5),\n        minWidth: '160px',\n    },\n    tabContent: {\n        minHeight: '100%',\n        maxHeight: '100%',\n        overflow: 'auto',\n    },\n    card: {\n        margin: theme.spacing(1.5),\n    },\n    SelectedCard: {\n        backgroundColor: theme.palette.action.selected,\n    },\n});","import React, { PureComponent } from 'react';\nimport upperFirst from 'lodash/upperFirst';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default class LoginModal extends PureComponent {\n    \n    static propTypes = {\n        open: PropTypes.bool,\n        handleClose: PropTypes.func,\n        handleLogin: PropTypes.func,\n    };\n    \n    emailEl = React.createRef();\n    passwordEl = React.createRef();\n\n    handleSubmit = event => {\n        const { handleClose, handleLogin } = this.props;\n\n        event.preventDefault();\n        const email = this.emailEl.current.value;\n        const password = this.passwordEl.current.value;\n\n        if (email.trim().length === 0 || password.trim().length === 0) {\n            return;\n        }\n\n\n\n        fetch('http://localhost:8000/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `{ login(email: \"${ email }\", password: \"${ password }\") { token, userId, tokenExpiration } }`\n            }),\n        })\n            .then(res => {\n                if (res.status !== 200 && res.status !== 201) {\n                    throw new Error('Failed!');\n                }\n                return res.json();\n            })\n            .then(resData => {\n                if (resData.data.login.token) {\n                    handleLogin({\n                        token: resData.data.login.token,\n                        userId: resData.data.login.userId,\n                        tokenExpiration: resData.data.login.tokenExpiration,\n                    });\n                    handleClose();\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n    \n    renderInput = ({ field, ...other }) => {\n        return (\n            <div>\n                <TextField\n                    id={ field }\n                    name={ field }\n                    label={ upperFirst(field) }\n                    { ...other }\n                />\n            </div>\n        )  \n    };\n\n    render() {\n        const { open, handleClose } = this.props;\n        const Input = this.renderInput;\n\n        return (\n            <Dialog open={ open } onClose={ handleClose }>\n                <form onSubmit={ this.handleSubmit }>\n                    <DialogTitle>Login</DialogTitle>\n                    <DialogContent>\n                        <Input field=\"email\" inputRef={ this.emailEl } type=\"text\" />\n                        <Input field=\"password\" inputRef={ this.passwordEl } type=\"password\" />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={ handleClose } color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\">\n                            Login\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        )\n    }\n}","import { withStyles } from '@material-ui/core/index';\nimport LoginModal from './LoginModal';\nimport styles from './styles';\n\nexport default withStyles(styles)(LoginModal);","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\n\nexport default class LogoutModal extends PureComponent {\n    \n    static propTypes = {\n        open: PropTypes.bool,\n        handleClose: PropTypes.func,\n        handleLogout: PropTypes.func,\n    };\n\n    handleLogout = () => {\n        const { handleClose, handleLogout } = this.props;\n\n        handleLogout();\n        handleClose();\n    };\n\n    render() {\n        const { open, handleClose } = this.props;\n\n        return (\n            <Dialog open={ open } onClose={ handleClose }>\n                <form onSubmit={ this.handleSubmit }>\n                    <DialogTitle>Logout</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Confirm logout.\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={ handleClose } color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={ this.handleLogout } type=\"submit\" color=\"primary\">\n                            Logout\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        )\n    }\n}","import { withStyles } from '@material-ui/core/index';\nimport LogoutModal from './LogoutModal';\nimport styles from './styles';\n\nexport default withStyles(styles)(LogoutModal);","import RegisterModal from './RegisterModal';\n\nexport default RegisterModal;","import React, { PureComponent } from 'react';\nimport upperFirst from 'lodash/upperFirst';\nimport PropTypes from 'prop-types';\nimport Loader from '@material-ui/core/CircularProgress';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nexport default class RegisterModal extends PureComponent {\n    \n    static propTypes = {\n        open: PropTypes.bool,\n        handleClose: PropTypes.func,\n        handleRegister: PropTypes.func,\n    };\n    \n    emailEl = React.createRef();\n    passwordEl = React.createRef();\n\n    state = {\n        loading: false,\n        emailError: null,\n    };\n\n    handleSubmit = event => {\n        const { handleRegister } = this.props;\n\n        event.preventDefault();\n        const email = this.emailEl.current.value;\n        const password = this.passwordEl.current.value;\n\n        if (email.trim().length === 0 || password.trim().length === 0) {\n            return;\n        }\n\n        this.setState({ loading: true, });\n\n        fetch('http://localhost:8000/graphql', {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                query: `mutation { createUser(userInput: { \n                        email: \"${ email }\", \n                        password: \"${ password }\" \n                    }) { _id, email, errors } }`\n            }),\n        })\n            .then(res => {\n                return res.json();\n            })\n            .then(resData => {\n                console.log(resData)\n                if (resData.errors) {\n                    throw resData.errors[0].message;\n                } else if (resData.data.createUser.email) {\n                    handleRegister();\n                }\n                this.setState({\n                    emailError: null,\n                    loading: false,\n                });\n            })\n            .catch(err => {\n                this.setState({\n                    loading: false,\n                    emailError: err,\n                });\n            });\n    };\n    \n    renderInput = ({ field, ...other }) => {\n        return (\n            <div>\n                <TextField\n                    required\n                    id={ field }\n                    name={ field }\n                    label={ upperFirst(field) }\n                    helperText={ ' ' }\n                    { ...other }\n                />\n            </div>\n        )  \n    };\n\n    render() {\n        const { open, handleClose } = this.props;\n        const { loading, emailError } = this.state;\n        const Input = this.renderInput;\n\n        return (\n            <Dialog open={ open } onClose={ handleClose }>\n                { loading && <Loader /> }\n                <form onSubmit={ this.handleSubmit }>\n                    <DialogTitle>Register</DialogTitle>\n                    <DialogContent>\n                        <Input\n                            autoFocus\n                            field=\"email\"\n                            inputRef={ this.emailEl }\n                            type=\"text\"\n                            error={ Boolean(emailError) }\n                            helperText={ emailError ? emailError : ' ' }\n                        />\n                        <Input\n                            field=\"password\"\n                            inputRef={ this.passwordEl }\n                            type=\"password\"\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={ handleClose } color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button type=\"submit\" color=\"primary\">\n                            Register\n                        </Button>\n                    </DialogActions>\n                </form>\n            </Dialog>\n        )\n    }\n}","import React from 'react';\n\nexport default React.createContext({\n    token: null,\n    userId: null,\n    login: ({ token, userId, tokenExpiration }) => {},\n    logout: () => {},\n});","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport LoginModal from '../LoginModal';\nimport LogoutModal from '../LogoutModal';\nimport RegisterModal from '../RegisterModal';\nimport AuthContext from '../../context/auth-context';\n\nexport default class LoginButton extends PureComponent {\n\n    static propTypes = {\n        context: PropTypes.shape(AuthContext),\n    };\n    \n    static contextType = AuthContext;\n    context = this.props.context || {};\n\n    state = {\n        registerModalOpen: false,\n        modalOpen: false,\n    };\n\n    handleRegister = () => {\n        this.setState({\n            registerModalOpen: false,\n            modalOpen: true,\n        });\n    };\n\n    toggleRegisterModal = () => {\n        const { registerModalOpen } = this.state;\n        this.setState({\n            registerModalOpen: !registerModalOpen,\n        });\n    };\n\n    toggleModal = () => {\n        const { modalOpen } = this.state;\n        this.setState({\n            modalOpen: !modalOpen,\n        });\n    };\n\n    render() {\n        const { modalOpen, registerModalOpen } = this.state;\n        const { token, login, logout } = this.context;\n        \n        if (token) {\n            return [\n                <Button key=\"button\" onClick={ this.toggleModal } color=\"inherit\">Logout</Button>,\n                <LogoutModal\n                    key=\"modal\"\n                    open={ modalOpen }\n                    handleLogout={ logout }\n                    handleClose={ this.toggleModal }\n                />\n            ]\n        }\n\n        return [\n            <Button key=\"login-button\" onClick={ this.toggleModal } color=\"inherit\">Login</Button>,\n            <Button key=\"register-button\" onClick={ this.toggleRegisterModal } color=\"inherit\">Register</Button>,\n            <LoginModal\n                key=\"login-modal\"\n                open={ modalOpen }\n                handleLogin={ login }\n                handleClose={ this.toggleModal }\n            />,\n            <RegisterModal\n                key=\"register-modal\"\n                open={ registerModalOpen }\n                handleRegister={ this.handleRegister }\n                handleClose={ this.toggleRegisterModal }\n            />,\n        ]\n    }\n}","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar/index';\nimport Toolbar from '@material-ui/core/Toolbar/index';\nimport Typography from '@material-ui/core/Typography/index';\nimport IconButton from '@material-ui/core/IconButton/index';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport LoginButton from '../LoginButton/LoginButton';\n\nexport default class Header extends PureComponent {\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton edge=\"start\" className={ classes.menuButton } color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography align=\"left\" variant=\"h6\" className={ classes.title }>\n                        Impact\n                    </Typography>\n                    <LoginButton />\n                </Toolbar>\n            </AppBar>\n        )\n    }\n}\n\nHeader.propTypes = {\n    classes: PropTypes.object.isRequired,\n};","import { withStyles } from '@material-ui/core/index';\nimport Header from './Header';\nimport styles from './styles';\n\nexport default withStyles(styles)(Header);","import React, { PureComponent } from 'react';\nimport { Card, List, ListItem, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nfunction Item({ children }) {\n    return (\n        <ListItem>\n            &#9679; &nbsp; &nbsp; { children }\n        </ListItem>\n    );\n}\n\nexport default class BasePanel extends PureComponent {\n\n    renderChapter = ({ list, children, title, }) => {\n        const { classes } = this.props;\n\n        return (\n            <Card elevation={ 2 } className={ classes.card }>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        { title }\n                    </Typography>\n                    {\n                        list ?\n                            <List>\n                                { children }\n                            </List>\n                            :\n                            children\n                    }\n                </CardContent>\n            </Card>\n        );\n    };\n\n    render() {\n        const Chapter = this.renderChapter;\n\n        return ([\n            <Chapter key=\"main\" title=\"Base informations\">\n                <Typography align=\"left\" variant=\"body2\">\n                    &nbsp; &nbsp;<b>Name:</b> Roland Marston <br />\n                    &nbsp; &nbsp;<b>Race:</b> Human <br />\n                </Typography>\n            </Chapter>,\n            <Chapter list key=\"highConcept\" title=\"Who is Roland?\">\n                <Item>Old adventurer that saw a lot, but his prime times are past him. He knows that, nevertheless life on a road is the one that he loves.</Item>\n                <Item>Roland was known as an genis inventor. That was main reason to stage his own death.</Item>\n                <Item>In young days Roland was neutral evil, but last several years changed that a little. His wife and daughter softened his heart and made him a little bit better person. Will Roland descend into his old, very amoral, behavior now, when his family is dead?</Item>\n            </Chapter>,\n        ]);\n    }\n}","import React, { PureComponent } from 'react';\nimport { Card, List, ListItem, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nfunction Item({ children }) {\n    return (\n        <ListItem>\n            &#9679; &nbsp; &nbsp; { children }\n        </ListItem>\n    );\n}\n\nexport default class HistoryPanel extends PureComponent {\n\n    renderChapter = ({ children, title, }) => {\n        const { classes } = this.props;\n\n        return (\n            <Card elevation={ 2 } className={ classes.card }>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        { title }\n                    </Typography>\n                    <List>\n                        { children }\n                    </List>\n                </CardContent>\n            </Card>\n        );\n    };\n\n    render() {\n        const Chapter = this.renderChapter;\n\n        return ([\n            <Chapter key=\"0\" title=\"Early days in Thay\">\n                <Item>Roland and his younger brother Tommy are born into a merchant family at the outskirts of Thay. Their early days are filled with joy and family love.</Item>\n                <Item>Their father lost a lot of money because of several wrong investitions.</Item>\n                <Item>Family is selling both young brothers into slavery. Specifically into a red mage’s household.</Item>\n                <Item>Two brothers are working in Karssus’s house. Cleaning, helping the cooks, etc.</Item>\n                <Item>Tom is contacted by otherworldly entity, a devil that calls himself The One That Ends All Time. He and Tom form a pact.</Item>\n                <Item>Both brothers escape slavery, and are hunted by Darius’s group.</Item>\n                <Item>After several weeks they are captured, but because they impressed Darius he decide to buy them out and recruit to his group.</Item>\n            </Chapter>,\n\n            <Chapter key=\"1\"  title=\"Full time adventurer\">\n                <Item>Many adventures with Darius and his group.</Item>\n                <Item>They do some bad things like hunt for slaves, kill innocents, steal, etc.</Item>\n                <Item>Roland meets Diana, young, red headed nurse in an Ilmater’s infirmary. They fall in love and marry.</Item>\n                <Item>Roland decides to leave adventuring, fake his death (with Darius’s party’s help) and settle down with Diana.</Item>\n            </Chapter>,\n\n            <Chapter key=\"2\"  title=\"Settling with family life\">\n                <Item>Roland’s and Diana’s daughter is born, Annie.</Item>\n                <Item>Roland is working as a craftsman at the edge of Phandelver. Making simple tools, toys, working with leather etc.</Item>\n                <Item>Diana gets pregnant again.</Item>\n                <Item>Roland’s house gets raided, Annie and Diana are killed and home is burned. Roland’s son’s soul that Diana was pregnant with is transferred into only Soul prison that Roland poses, his watch.</Item>\n            </Chapter>,\n\n            <Chapter key=\"3\"  title=\"Old dog’s coming back\">\n                <Item>Roland digs out his gear, and kills all attackers.</Item>\n                <Item>Roland comes to Waterdeep to find Valetta.</Item>\n            </Chapter>,\n        ]);\n    }\n}","import React, { PureComponent } from 'react';\nimport { Card, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class EventsPanel extends PureComponent {\n\n    renderChapter = ({ children, title, }) => {\n        const { classes } = this.props;\n\n        return (\n            <Card elevation={ 2 } className={ classes.card }>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        { title }\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        { children }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    };\n\n    render() {\n        const Chapter = this.renderChapter;\n\n        return ([\n            <Chapter key=\"0\" title=\"Librarian job\">\n                Early in Marston brothers’ history their group was tasked with finding special, magic book from an ancient Lost Library in a middle of desert. They found that place, and convinced library guardian, a paverfull fay ghost, to let them in. While inside Iliya’s curiosity took better of him and he started taking books forbidden by the guardian, with lead to fight.  Every time guardian died he immediately reincarnated, the team almost lost, bu at the end Ender, with his knowledge and guidance, helped them bound undying’s fey soul into a statue. With his last words guardian cursed adventures: “You will never be truly peaceful! Every peace of knowledge you obtain will cause you pain and suffering!”.\n                <br /><br />\n                <em>\n                    Aftermath: Tom, Roland and Iliya reverse engineered soul binding spell and together they made Soul Prisons.\n                </em>\n            </Chapter>,\n\n            <Chapter key=\"1\"  title=\"Hunting Robin Hood\">\n                John Lock, some minor nobleman bastard was robbing rich nobles in outskirts of Calimshan. Problem was that most local population was in favor of John’s banditism so Darius’s team was hired to end that problem by all means necessary. Tracking John turned out to be impossible even for Zed, so he found people close to John’s men, their wifes, children and parents, and together with Tom, Roland and Grom they burned villages and killed many, many innocent. Plan worked and John had to come out, for his doom. Battle was quick and brutal. For that they all of the villagers that survived this were talking about Blood Riders (name they gave Darius’s group).\n                <br /><br />\n                <em>\n                    Aftermath: “Blood Riders” name stick. It helped them by rising prices for their work and causing fear in their enemies harts, but also make them targets of many vangences of their victims. In one of them several years latter Iliya died.\n                </em>\n            </Chapter>,\n        ]);\n    }\n}","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport { Card, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class InventionsPanel extends PureComponent {\n\n    renderCharacter = ({ children, name, selected, }) => {\n        const { classes } = this.props;\n        const cardClass = classNames(classes.card, {\n            [classes.SelectedCard]: selected,\n        });\n\n        return (\n            <Card className={ cardClass }>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        { name }\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        { children }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    };\n\n    render() {\n        const Character = this.renderCharacter;\n\n        return ([\n            <Character key=\"pistol1\" name=\"Last whisper - pistol\">\n                WORK IN PROGRESS\n            </Character>,\n            <Character key=\"pistol2\" name=\"XXX - pistol\">\n                WORK IN PROGRESS\n            </Character>,\n            <Character key=\"rifle\" name=\"XXX - rifle\">\n                WORK IN PROGRESS\n            </Character>,\n            <Character key=\"leftArm\" name=\"Claw - left arm\">\n                In a fight with Lord’s Allience’s bounty hunters Roland lost left arm. After 2 years without second hand Roland and Tom went to City of Brass on an elemental Plane of Fire. Once in a city they made a bargain with Gar’tu’zad, a fire Ifrit smith: he will help them craft a left arm for Roland, but he will take one favor from them both, that he will use in a future. The result is Claw, left arm made from black devil iron, hardened in a blood of a tousents demons.\n            </Character>,\n            <Character key=\"defender\" name=\"Omen - steel hound\">\n                One of Tom’s and Roland’s earliest work. Summoned Hell Hound that was Roland’s companion for many years. After one of the worst battles the hound was heavily wounded defending Roland. In return Marstorn made a mechanical construct and, with Toms and Ender, transferred soul and mind of Hound into a new body. Omen is an old dog, an emissary of Devil and a friend to Roland. He is calm and very protective for anyone he consider his flock.\n            </Character>,\n            <Character key=\"souls\" name=\"Soul prison\">\n                Items design to trap and contain a soul of a living being. They are always mechanical contraptions enchanted with high level magic. When the soul is inside cogs and parts of those items start to move with can by used to power small items. They were only 17 Soul prisons created.\n            </Character>,\n            <Character key=\"watch\" name=\"Soul watch\">\n                Only Soul prison that remain in Roland’s posesion. It’s in an mechanical watch and it’s full with Roland’s unborn son’s soul.\n            </Character>,\n        ]);\n    }\n}","import React, { PureComponent } from 'react';\nimport classNames from 'classnames';\nimport { Card, Typography } from '@material-ui/core';\nimport CardContent from '@material-ui/core/CardContent';\n\nexport default class CharacterPanel extends PureComponent {\n\n    renderCharacter = ({ children, name, selected, }) => {\n        const { classes } = this.props;\n        const cardClass = classNames(classes.card, {\n            [classes.SelectedCard]: selected,\n        });\n\n        return (\n            <Card className={ cardClass }>\n                <CardContent>\n                    <Typography variant=\"h6\">\n                        { name }\n                    </Typography>\n                    <Typography variant=\"body2\">\n                        { children }\n                    </Typography>\n                </CardContent>\n            </Card>\n        );\n    };\n\n    render() {\n        const Character = this.renderCharacter;\n\n        return ([\n            <Character key=\"0\" name=\"Kurt Marston\">\n                Roland’s father, middle-tier merchant, usually dealing with spices, fabrics and mechanical tools (and toys) imported from the east. Likes his children, but not as much as his dream of becoming great and rich merchant. He died poor and in dept in his 60’s leaving his wife and newborn daughter.\n            </Character>,\n            <Character key=\"1\" name=\"Elisabeth Marston\">\n                Roland’s mother, housewife. Her beauty as a young girl stunned most men, but she was getting old fast. She become mother full of hypocrisy, loving outside but cold and selfish inside. After her husband died leaving her with a lot of debts she is sold into slavery with her young daughter.\n            </Character>,\n            <Character key=\"2\" name=\"Tom Marston\">\n                Roland’s younger brother and middle Marston sibling. The loudest and wordy of all Marstons, he always knew what to say and when to get what he wanted. During his time as a slave he found himself in a middle of attention of some powerful entity from Nine Hells. Tom forget a pact with that entity and with its help he, and Roland, escaped the slavery. Over many years Tom’s pact with a devil started to reflect negatively on his mental health. Slowly he become more sadistic, cold hearted and cruel. Nevertheless Tom always stayed loyal to his few, real friends but his changing personality was a center of few big fights between Darius’s group. With Enders help Tom become very powerful warlock and demonologist.\n            </Character>,\n            <Character key=\"3\" name=\"Alice Marston\">\n                Roland’s youngests sibling. Sister that was burn after he and his brother was sold out as slaves. She never knew truth about her brothers (she heard stories they died). She had best traits of her brothers, Roland’s unusual and brilliant intellect and resourcefulness together with Tom’s charismatic smile and smooth talk. She even was as beautiful as her mother when she was young.\n                She was sold into slavery when she was 14, but in a place when magic talent and court intrigues rule her unusual intelligence and charisma could have helped her get out of slavery.\n            </Character>,\n            <Character key=\"4\" name=\"Ender\">\n                The One That Ends All Time, Tom’s devil. While Marston brothers were “playing” at night in Karssus laboratory (they were actually trying to figure out what Karssus was doing in there) this devil found Toms out and reach out to him. After making a pact in Tom’s dream he become his patron. Enders true name is not known to others, and if Tom knows it he doesn't tell. Besides that Ender is really talkative and curious about a world. Some of Roland’s inventions are directly inspired by Ender’s knowledge and lessons.\n            </Character>,\n            <Character key=\"5\" name=\"Karssus Thorn\">\n                Prominent noble and Red Mage of Thay. Cruel but fair lord. He was one of the scientists responsible for researching other planes.\n            </Character>,\n            <Character key=\"6\" name=\"Diana Marston\">\n                Half-elf woman, nurse in a service of Ilmater. Maybe the only pure and truly good person in a world. Always was trying to help others. She wasn't blind to reality of the world, for example she knew exactly what was Roland doing before he met her, but she always try to do her best. She died in Roland’s hands, whispering that she loves him to the very end.\n            </Character>,\n            <Character key=\"7\" name=\"Annie Marston\">\n                WORK IN PROGRESS\n            </Character>,\n            <Character key=\"8\" name=\"Gar’tu’zad\">\n                One of the best smiths in City of Brass. Working mostly for a powerful devils making intelligent weapons for killing demons.\n            </Character>,\n            <Character key=\"9\" name=\"Darius's party\">\n                <em>Valetta</em> - Brass dragornborn priest of Gond. <br />\n                <em>Zed</em> - One-eyed firbolg ranger. <br />\n                <em>Iliya</em> - Rock gnome illusionist. <br />\n                <em>Grom`a`gar</em> - Half-ork barbarian woman from north. <br />\n                WORK IN PROGRESS\n            </Character>,\n        ]);\n    }\n}","import React, { PureComponent } from 'react';\nimport { Card, Typography, Tab, Tabs, Box } from '@material-ui/core';\nimport BasePanel from './BasePanel';\nimport HistoryPanel from './HistoryPanel';\nimport EventsPanel from './EventsPanel';\nimport InventionsPanel from './InventionsPanel';\nimport CharacterPanel from './CharacterPanel';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={ value !== index }\n            id={ `vertical-tabpanel-${ index }` }\n            { ...other }\n        >\n            <Box p={ 0 }>{ children }</Box>\n        </Typography>\n    );\n}\n\nfunction a11yProps(index) {\n    return {\n        id: `vertical-tab-${ index }`,\n    };\n}\n\nexport default class CharacterPage extends PureComponent {\n\n    state = {\n        tab: 0,\n    };\n\n    setTab = (event, tab) => {\n        this.setState({ tab });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { tab } = this.state;\n\n        return (\n            <div className={ classes.root }>\n                <Card className={ classes.tabMenu }>\n                    <Tabs\n                        orientation=\"vertical\"\n                        variant=\"scrollable\"\n                        value={ tab }\n                        onChange={ this.setTab }\n                    >\n                        <Tab label=\"Base informations\" { ...a11yProps(0) } />\n                        <Tab label=\"History\" { ...a11yProps(1) } />\n                        <Tab label=\"Events\" { ...a11yProps(2) } />\n                        <Tab label=\"Characters\" { ...a11yProps(3) } />\n                        <Tab label=\"Inventions\" { ...a11yProps(4) } />\n                    </Tabs>\n                </Card>\n                <div className={ classes.tabContent }>\n                    <TabPanel value={ tab } index={ 0 }>\n                        <BasePanel classes={ classes } />\n                    </TabPanel>\n                    <TabPanel value={ tab } index={ 1 }>\n                        <HistoryPanel classes={ classes } />\n                    </TabPanel>\n                    <TabPanel value={ tab } index={ 2 }>\n                        <EventsPanel classes={ classes } />\n                    </TabPanel>\n                    <TabPanel value={ tab } index={ 3 }>\n                        <CharacterPanel classes={ classes } />\n                    </TabPanel>\n                    <TabPanel value={ tab } index={ 4 }>\n                        <InventionsPanel classes={ classes } />\n                    </TabPanel>\n                </div>\n            </div>\n        )\n    }\n}","import CharacterPage from './CharacterPage';\nimport { withStyles } from '@material-ui/core';\nimport styles from './styles';\n\nexport default withStyles(styles)(CharacterPage);","import React, { PureComponent } from 'react';\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\nimport Header from './components/Hedaer';\nimport CharacterPage from './components/CharacterPage';\nimport AuthContext from './context/auth-context';\nimport './App.css';\n\nclass App extends PureComponent {\n\n    state = {\n        token : null,\n        userId: null,\n    };\n\n    login = ({ token, userId, tokenExpiration }) => {\n        this.setState({ \n            token: token, \n            userId: userId\n        });\n    };\n\n    logout = () => {\n        this.setState({\n            token: null,\n            userId: null\n        });\n    };\n    \n    render() {\n        const { token, userId } = this.state;\n        \n        return (\n            <div className=\"App\" style={{\n                position: 'fixed',\n                top: 0,\n                left: 0,\n                right: 0,\n                bottom: 0,\n                display: 'flex',\n                flexDirection: 'column',\n            }}>\n                <AuthContext.Provider\n                    value={{\n                        token: this.state.token,\n                        userId: this.state.userId,\n                        login: this.login,\n                        logout: this.logout\n                    }}\n                >\n                    <Header />\n                    <div style={{\n                        flexGrow: '1',\n                        overflow: 'auto',\n                    }}>\n                        <BrowserRouter>\n                            <Switch>\n                                { token &&\n                                <Route exact path=\"/\">\n                                    Home logged in: { userId }\n                                </Route>\n                                }\n                                <Route exact path=\"/roland\">\n                                    <CharacterPage />\n                                </Route>\n                                { !token &&\n                                <Route exact path=\"/\">\n                                    Not logged in\n                                </Route>\n                                }\n                            </Switch>\n                        </BrowserRouter>\n                    </div>\n                </AuthContext.Provider>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}